{"ast":null,"code":"import { FilterPipe } from '../../pipes/filter.pipe';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/movie-list.service\";\nimport * as i2 from \"../../services/user.service\";\nimport * as i3 from \"../header/header.component\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"../footer/footer.component\";\nimport * as i8 from \"../../pipes/pagination.pipe\";\nimport * as i9 from \"../../pipes/filter.pipe\";\n\nfunction DashboardComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_12_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r5 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.userService.dateFilterIn[i_r5] = $event;\n    })(\"change\", function DashboardComponent_div_12_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const dateFilter_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onSelectDateFilter(dateFilter_r4, i_r5);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const dateFilter_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.userService.dateFilterIn[i_r5]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dateFilter_r4.first + \"-\" + dateFilter_r4.second);\n  }\n}\n\nfunction DashboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_div_16_Template_input_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const i_r10 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.userService.genresFilterIn[i_r10] = $event;\n    })(\"change\", function DashboardComponent_div_16_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const genres_r9 = restoredCtx.$implicit;\n      const i_r10 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onSelectGenresFilter(genres_r9, i_r10);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const genres_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.userService.genresFilterIn[i_r10]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(genres_r9);\n  }\n}\n\nfunction DashboardComponent_div_29_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const gen_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"color\", ctx_r16.color[i_r18]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(gen_r17);\n  }\n}\n\nconst _c0 = function () {\n  return [\"/user\", \"movieFull\"];\n};\n\nconst _c1 = function (a0) {\n  return {\n    id: a0\n  };\n};\n\nfunction DashboardComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelementStart(1, \"figure\");\n    i0.ɵɵelement(2, \"img\", 19);\n    i0.ɵɵelementStart(3, \"figcaption\");\n    i0.ɵɵelementStart(4, \"p\", 20);\n    i0.ɵɵelementStart(5, \"strong\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 21);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 22);\n    i0.ɵɵtemplate(10, DashboardComponent_div_29_div_10_Template, 3, 3, \"div\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const movieList_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0))(\"queryParams\", i0.ɵɵpureFunction1(7, _c1, movieList_r14.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", movieList_r14.posterUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(movieList_r14.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Year: \", movieList_r14.year, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", movieList_r14.genres);\n  }\n}\n\nfunction DashboardComponent_li_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 25);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_li_35_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const i_r20 = restoredCtx.index;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.onClickPageNumber(i_r20);\n    });\n    i0.ɵɵelementStart(1, \"a\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const page_r19 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(page_r19 + 1);\n  }\n}\n\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(movieListService, userService) {\n      this.movieListService = movieListService;\n      this.userService = userService; //searchBy array contains array of objects having date, genres and runTime object \n\n      this.searchBy = [{\n        filterName: \"date\",\n        date: []\n      }, {\n        filterName: \"genres\",\n        genres: []\n      }, {\n        filterName: \"runTime\",\n        runTime: []\n      }]; //searchText used for storing title keywords\n\n      this.searchText = \"\"; // current page number, initially 0\n\n      this.currentPageNumber = 0; //page array, stores number of pages\n\n      this.pages = []; //date ranges\n\n      this.dateFilters = [{\n        first: \"1980\",\n        second: \"1990\"\n      }, {\n        first: \"1990\",\n        second: \"2000\"\n      }, {\n        first: \"2000\",\n        second: \"2010\"\n      }, {\n        first: \"2010\",\n        second: \"2022\"\n      }]; //color array\n\n      this.color = [\"red\", \"blue\", \"orange\"]; //store checkedin filters indexes\n\n      this.filterCheckedIn = [[], [], []]; //loading services\n    }\n\n    ngOnInit() {\n      //storing user filter\n      //checking if already user has set date filter and retriving previous result\n      if (sessionStorage.getItem('searchByDate') !== null) {\n        var obj = sessionStorage.getItem(\"searchByDate\");\n        var parseObj = JSON.parse(obj);\n        this.searchBy[0].date = parseObj.date;\n      } //checking if already user has set genres filter and retriving previous result\n\n\n      if (sessionStorage.getItem('searchByGenres') !== null) {\n        var obj = sessionStorage.getItem(\"searchByGenres\");\n        var parseObj = JSON.parse(obj);\n        this.searchBy[1].genres = parseObj.genres;\n      } //cheking if already use has set ruTime filter and retriving previous result\n\n\n      if (sessionStorage.getItem('searchByTime') !== null) {\n        var obj = sessionStorage.getItem(\"searchByTime\");\n        var parseObj = JSON.parse(obj);\n        this.searchBy[2].runTime = parseObj.runTime;\n      } //cheking if already user has searched using search bar and retriving previous result\n\n\n      if (sessionStorage.getItem(\"searchText\") !== null) {\n        this.searchText = sessionStorage.getItem(\"searchText\");\n      } //setting the filter checkbox that user has already set\n\n\n      if (sessionStorage.getItem(\"filterCheckedIn\") !== null) {\n        var filterCheckedIn = JSON.parse(sessionStorage.getItem(\"filterCheckedIn\"));\n        this.filterCheckedIn = filterCheckedIn; //setting date filter\n\n        if (this.filterCheckedIn[0].length !== 0) {\n          this.filterCheckedIn[0].forEach(f => {\n            this.userService.dateFilterIn[f] = true;\n          });\n        } //setting genres filter\n\n\n        if (this.filterCheckedIn[1].length !== 0) {\n          this.filterCheckedIn[1].forEach(f => {\n            this.userService.genresFilterIn[f] = true;\n          });\n        } //setting runTime filter\n\n\n        if (this.filterCheckedIn[2].length !== 0) {\n          this.userService.runTimeIn[0] = true;\n        }\n      }\n\n      this.onCalculateNumberPages();\n    } //calculate number of pages based on filter is set or not set\n    //in one page 12 records will be displayed\n\n\n    onCalculateNumberPages() {\n      //initializing pages  with empty array\n      this.pages = []; //initialise filter pipe\n\n      var filter = new FilterPipe(); //filter pipes takes 3 parameter (movie array, searchBy filter and searchText filter) and return filtered records\n\n      var result = filter.transform(this.movieListService.movieList[0].movies, this.searchBy, this.searchText); //counting number of pages by dividing by 12\n\n      var numberOfPages = Math.ceil(result.length / 12); //adding page to pages array\n\n      for (var i = 0; i < numberOfPages; i++) {\n        this.pages.push(i);\n      } //after calculating pages,each time we set currentPageNumber=0\n\n\n      this.currentPageNumber = 0;\n    } //get page number and display 12 records beased on the page number\n    //takes page number as input\n\n\n    onClickPageNumber(i) {\n      //setting currentPageNumber to  clicked page number\n      this.currentPageNumber = i;\n    } //title based search\n\n\n    onSearchTitle() {\n      sessionStorage.setItem(\"searchText\", this.searchText); //calculating pages after search\n\n      this.onCalculateNumberPages();\n    } //on select date filter\n    //it takes two parameter(date ranges (first and second), index)\n    //it search between the date range from first to second\n\n\n    onSelectDateFilter(value, i) {\n      //setting searchText to empty, after selecting date filter, user can again search using title\n      this.searchText = \"\"; //when user has checkedin date filter\n\n      if (this.userService.dateFilterIn[i] == true) {\n        //pushing date ranges (first and second date) to searchBy array\n        this.searchBy[0].date.push(value); //pushing index to filterCheckedIn array\n\n        this.filterCheckedIn[0].push(i);\n      } else {\n        //if user has unchckedin genres filter\n        //popping date from searchBy array\n        this.searchBy[0].date = this.searchBy[0].date.filter(f => {\n          return value !== f;\n        }); //popping index from filterCheckedIn array\n\n        this.filterCheckedIn[0] = this.filterCheckedIn[0].filter(f => {\n          return f !== i;\n        });\n      } //storing date filter to sessionStorage for future use\n\n\n      sessionStorage.setItem(\"searchByDate\", JSON.stringify(this.searchBy[0])); //storing filterCheckedIn to sessionStorage for future use\n\n      sessionStorage.setItem(\"filterCheckedIn\", JSON.stringify(this.filterCheckedIn)); //after checkedin or uncheckedin date filter, calculating number of pages\n\n      this.onCalculateNumberPages();\n    } //on select genres filter, it takes two parameter(genres name, index)\n    //it search based on genres\n\n\n    onSelectGenresFilter(value, i) {\n      //setting searchText to empty, after selecting genres filter, user can again search using title\n      this.searchText = \"\"; //when user has checkedin the genresfilter\n\n      if (this.userService.genresFilterIn[i] === true) {\n        //pushing genres name to searchBy array\n        this.searchBy[1].genres.push(value); //pushing index to filterCheckedIn array\n\n        this.filterCheckedIn[1].push(i);\n      } else {\n        //when user has unchecked the genres filter\n        //popping out genres name from searchBy array\n        this.searchBy[1].genres = this.searchBy[1].genres.filter(f => {\n          return value !== f;\n        }); //popping out the index from filterCheckedIn array\n\n        this.filterCheckedIn[1] = this.filterCheckedIn[1].filter(f => {\n          return f !== i;\n        });\n      } //storing genresFilter to sessionStorage for future use\n\n\n      sessionStorage.setItem(\"searchByGenres\", JSON.stringify(this.searchBy[1])); //storing filterCheckedIn to sessionStorage for future use\n\n      sessionStorage.setItem(\"filterCheckedIn\", JSON.stringify(this.filterCheckedIn)); //after checking or unchecking genres filter, calculating number of pages\n\n      this.onCalculateNumberPages();\n    } //on select runTime filter\n    //it takes one parameter, i.e runTime\n\n\n    onSelectTimeFilter(value) {\n      //setting searchText to empty, after selecting genres filter, user can again search using title\n      this.searchText = \"\"; //when user has checkedin the runtime filter\n\n      if (this.userService.runTimeIn[0] === true) {\n        //pushing runtime filter value to searchBy array\n        this.searchBy[2].runTime.push(value); //pushing index to filterCheckedIn array\n\n        this.filterCheckedIn[2].push(0);\n      } else {\n        //popping out the runTime value from searchBy array\n        this.searchBy[2].runTime.pop(); //popping out the index from filterCheckedIn array\n\n        this.filterCheckedIn[2].pop();\n      } //storing runTime filter to sessionStorage for future use\n\n\n      sessionStorage.setItem(\"searchByTime\", JSON.stringify(this.searchBy[2])); //storing filterCheckedIn to sessionStorage for future use\n\n      sessionStorage.setItem(\"filterCheckedIn\", JSON.stringify(this.filterCheckedIn)); //after checking or unchecking runTime filter, calculating number of pages\n\n      this.onCalculateNumberPages();\n    } //reset all filter\n\n\n    resetFilter() {\n      this.searchBy = [{\n        filterName: \"date\",\n        date: []\n      }, {\n        filterName: \"genres\",\n        genres: []\n      }, {\n        filterName: \"runTime\",\n        runTime: []\n      }];\n      this.filterCheckedIn = [[], [], []];\n      this.searchText = \"\";\n      this.userService.dateFilterIn = Array.from({\n        length: 4\n      }, () => false);\n      this.userService.genresFilterIn = Array.from({\n        length: this.movieListService.movieList[0].genres.length\n      }, () => false);\n      this.userService.runTimeIn = Array.from({\n        length: 1\n      }, () => false);\n      sessionStorage.clear(); //after reseting all filters, calculating number of pages\n\n      this.onCalculateNumberPages();\n    }\n\n  }\n\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.MovieListService), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 37,\n    vars: 13,\n    consts: [[1, \"row\", \"search\"], [1, \"col-md-3\"], [1, \"col-md-6\", \"box-shadow\"], [\"type\", \"text\", \"placeholder\", \"Search by title\", 1, \"form-control\", 3, \"ngModel\", \"keyup\", \"ngModelChange\"], [1, \"row\"], [1, \"col-md-3\", \"box-shadow\", \"filter\"], [\"class\", \"form-group form-check\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"exampleCheck1\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"exampleCheck1\", 1, \"form-check-label\"], [2, \"padding\", \"20px\", \"color\", \"white\"], [1, \"btn\", \"btn-primary\", 2, \"padding\", \"5px\", \"width\", \"120px\", 3, \"click\"], [1, \"col-md-9\"], [1, \"row\", 2, \"margin\", \"0\"], [\"class\", \"col-md-3 box-shadow movie-list\", \"onclick\", \"return false\", 3, \"routerLink\", \"queryParams\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", \"...\"], [1, \"pagination\"], [\"class\", \"page-item\", \"onclick\", \"return false\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"onclick\", \"return false\", 1, \"col-md-3\", \"box-shadow\", \"movie-list\", 3, \"routerLink\", \"queryParams\"], [3, \"src\"], [2, \"margin\", \"2px 0 0 0\"], [2, \"margin\", \"0\", \"color\", \"rgb(93, 93, 93)\"], [2, \"display\", \"flex\", \"width\", \"auto\"], [\"style\", \"color: orange;padding: 2px;\", 3, \"color\", 4, \"ngFor\", \"ngForOf\"], [2, \"color\", \"orange\", \"padding\", \"2px\"], [\"onclick\", \"return false\", 1, \"page-item\", 3, \"click\"], [\"href\", \"#\", 1, \"page-link\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-header\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelement(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"input\", 3);\n        i0.ɵɵlistener(\"keyup\", function DashboardComponent_Template_input_keyup_4_listener() {\n          return ctx.onSearchTitle();\n        })(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.searchText = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"h4\");\n        i0.ɵɵtext(8, \"Filters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵelementStart(10, \"strong\");\n        i0.ɵɵtext(11, \"By Year:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, DashboardComponent_div_12_Template, 4, 2, \"div\", 6);\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵelementStart(14, \"strong\");\n        i0.ɵɵtext(15, \"By Generes:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, DashboardComponent_div_16_Template, 4, 2, \"div\", 6);\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵelementStart(18, \"strong\");\n        i0.ɵɵtext(19, \"By Runtime:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7);\n        i0.ɵɵelementStart(21, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.userService.runTimeIn[0] = $event;\n        })(\"change\", function DashboardComponent_Template_input_change_21_listener() {\n          return ctx.onSelectTimeFilter(150);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"label\", 9);\n        i0.ɵɵtext(23, \"Run time 150 min\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 10);\n        i0.ɵɵelementStart(25, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_25_listener() {\n          return ctx.resetFilter();\n        });\n        i0.ɵɵtext(26, \"Reset\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 12);\n        i0.ɵɵelementStart(28, \"div\", 13);\n        i0.ɵɵtemplate(29, DashboardComponent_div_29_Template, 11, 9, \"div\", 14);\n        i0.ɵɵpipe(30, \"pagination\");\n        i0.ɵɵpipe(31, \"filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 4);\n        i0.ɵɵelementStart(33, \"nav\", 15);\n        i0.ɵɵelementStart(34, \"ul\", 16);\n        i0.ɵɵtemplate(35, DashboardComponent_li_35_Template, 3, 1, \"li\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"app-footer\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchText);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dateFilters);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.movieListService.movieList[0].genres);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.userService.runTimeIn[0]);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(30, 6, i0.ɵɵpipeBind3(31, 9, ctx.movieListService.movieList[0].movies, ctx.searchBy, ctx.searchText), ctx.currentPageNumber));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      }\n    },\n    directives: [i3.HeaderComponent, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.NgForOf, i4.CheckboxControlValueAccessor, i6.RouterLink, i7.FooterComponent],\n    pipes: [i8.PaginationPipe, i9.FilterPipe],\n    styles: [\".row[_ngcontent-%COMP%]{width:100%;margin:20px 0}.search[_ngcontent-%COMP%]   .col-md-6[_ngcontent-%COMP%]{padding:20px;border-radius:5px}.filter[_ngcontent-%COMP%]{padding:20px;margin:20px 0}.filter[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .filter[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{padding:10px}.col-md-9[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .movie-list[_ngcontent-%COMP%]{margin:20px 0;height:350px;border-right:2px solid orange;cursor:pointer}.movie-list[_ngcontent-%COMP%]   figure[_ngcontent-%COMP%]{width:100%;height:100%}.movie-list[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:70%}@media only screen and (max-width: 768px){.col-md-9[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]   .movie-list[_ngcontent-%COMP%]{margin:20px auto}}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}