{"ast":null,"code":"import * as i0 from \"@angular/core\"; //impure pipes\n\nexport let FilterPipe = /*#__PURE__*/(() => {\n  class FilterPipe {\n    //filter pipe\n    //takes three parameter (movie array, searchBy i.e filter, searchText i.e movie title keyword)\n    //return filtered records\n    //remove duplicate method\n    //takes 3 parameter\n    //return unique records\n    removeDuplicate(a, b, c) {\n      return c.indexOf(a) === b;\n    }\n\n    transform(movie, searchBy, searchText) {\n      var resultArray = [];\n      var temp = []; //if user has neither set serachText nor searchBy\n\n      if (searchText == \"\" && searchBy[0].date.length === 0 && searchBy[1].genres.length === 0 && searchBy[2].runTime.length === 0) {\n        return movie;\n      } //if user has only using search bar i.e set searchText(trying to search by title) and no filter is set i.e no searchBy is set\n      else if (searchText !== \"\" && searchBy[0].date.length === 0 && searchBy[1].genres.length === 0 && searchBy[2].runTime.length === 0) {\n        movie.forEach(mo => {\n          if (mo.title.toLowerCase().includes(searchText.toLowerCase())) {\n            resultArray.push(mo);\n          }\n        });\n      } //user has set searchBy i.e may be eith date or genres or runTime is set or all filter is set\n      else if (searchBy[0].date.length > 0 || searchBy[1].genres.length > 0 || searchBy[2].runTime.length > 0) {\n        resultArray = []; //filreing based on date filter\n\n        searchBy[0].date.forEach(d => {\n          movie.forEach(mo => {\n            if (Number(mo.year) <= Number(d.second) && Number(mo.year) >= Number(d.first)) {\n              resultArray.push(mo);\n            }\n          });\n        }); //filtering based on genres filter\n\n        searchBy[1].genres.forEach(g => {\n          movie.forEach(mo => {\n            mo.genres.forEach(gen => {\n              if (g === gen) {\n                resultArray.push(mo);\n              }\n            });\n          });\n        }); //filtering based on runTime filter\n\n        searchBy[2].runTime.forEach(r => {\n          movie.forEach(mo => {\n            if (Number(mo.runtime) === Number(r)) {\n              resultArray.push(mo);\n            }\n          });\n        }); //after filtering based on date, genres and runtime, if user wants to search based on title\n\n        if (searchText != \"\") {\n          resultArray.forEach(mo => {\n            if (mo.title.toLowerCase().includes(searchText.toLowerCase())) {\n              temp.push(mo);\n            }\n          });\n          resultArray = [];\n          resultArray = temp;\n        }\n      } //may pe possible that we get duplicate records, filtering duplicate records\n\n\n      resultArray = resultArray.filter(this.removeDuplicate); //return searched data\n\n      return resultArray;\n    }\n\n  }\n\n  FilterPipe.ɵfac = function FilterPipe_Factory(t) {\n    return new (t || FilterPipe)();\n  };\n\n  FilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filter\",\n    type: FilterPipe,\n    pure: false\n  });\n  return FilterPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}